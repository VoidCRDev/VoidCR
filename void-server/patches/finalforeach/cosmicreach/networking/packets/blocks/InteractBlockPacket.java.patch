--- a/finalforeach/cosmicreach/networking/packets/blocks/InteractBlockPacket.java
+++ b/finalforeach/cosmicreach/networking/packets/blocks/InteractBlockPacket.java
@@ -75,6 +_,7 @@
 
    @Override
    public void handle(NetworkIdentity identity, ChannelHandlerContext ctx) {
+      boolean hasCalled = false; // VoidCR has called PrePlayerInteractBlockEvent event
       if (!identity.isClient()) {
          Zone zone = identity.getZone();
          Player player = identity.getPlayer();
@@ -92,6 +_,11 @@
             if (this.iteractTarget != InteractBlockPacket.IteractTarget.IGNORE_BLOCK_ENTITY) {
                BlockEntity blockEntity = this.blockPos.getBlockEntity();
                if (blockEntity != null) {
+                  // VoidCR start - PrePlayerInteractBlockEvent
+                  final var event = sh.miles.voidcr.impl.plugin.lifecycle.event.VoidEventFactory.prePlayerInteractBlock(identity, this.blockPos, this.blockState);
+                  if (event != null && event.isCanceled()) return;
+                  hasCalled = true;
+                  // VoidCR end - PrePlayerInteractBlockEvent
                   blockEntity.onInteract(player, zone);
                }
             }
@@ -106,6 +_,12 @@
                identity.send(new ContainerSyncPacket(0, player.inventory));
             }
          } else {
+            if (!hasCalled) {
+               // VoidCR start - PrePlayerInteractBlockEvent
+               final var event = sh.miles.voidcr.impl.plugin.lifecycle.event.VoidEventFactory.prePlayerInteractBlock(identity, this.blockPos, this.blockState);
+               if (event != null && event.isCanceled()) return;
+               // VoidCR end - PrePlayerInteractBlockEvent
+            }
             BlockEventTrigger[] triggers = this.blockState != null ? this.blockState.getTrigger("onInteract") : null;
             if (triggers != null) {
                BlockEventArgs args = new BlockEventArgs();
@@ -117,6 +_,7 @@
                args.runScheduledTriggers();
             }
          }
+         if (blockPos != null) sh.miles.voidcr.impl.plugin.lifecycle.event.VoidEventFactory.postPlayerInteractBlock(identity, this.blockPos, this.blockState); // VoidCR - PostPlayerInteractBlockEvent
       }
    }
 
