--- a/finalforeach/cosmicreach/networking/packets/meta/ItchSessionTokenPacket.java
+++ b/finalforeach/cosmicreach/networking/packets/meta/ItchSessionTokenPacket.java
@@ -77,9 +_,16 @@
 
    @Override
    public void handle(NetworkIdentity identity, ChannelHandlerContext ctx) {
-      if (!identity.isClient()) {
+      if (!identity.isClient() && finalforeach.cosmicreach.settings.ServerSettings.OFFLINE_MODE.isFalse()) { // VoidCR don't authenticate in offline mode
          try {
             Account account = this.getAccountFromToken();
+            // VoidCR start - online mode PreAccountJoinEvent
+            final var event = sh.miles.voidcr.impl.plugin.lifecycle.event.VoidEventFactory.preAccountJoin(account);
+            if (event.isKicked()) {
+               ServerSingletons.SERVER.kick(event.getKickMessage(), identity);
+               return;
+            }
+            // VoidCR end - online mode PreAccountJoinEvent
             Logger.info("Authenticated account: " + account.getUsername());
             if (ServerSettings.WHITELIST_ENABLED.isTrue() && !ServerSingletons.WHITELIST.hasAccount(account)) {
                Logger.info("Account is not in the whitelist: " + account.getUsername());
@@ -90,6 +_,7 @@
             } else {
                ServerSingletons.SERVER.addAuthenticatedIdentity((ServerIdentity)identity);
                ServerSingletons.addAccount(identity, account);
+               sh.miles.voidcr.impl.plugin.lifecycle.event.VoidEventFactory.postAccountJoin(account); // VoidCR - online mode PostAccountJoinEvent
             }
          } catch (Exception var4) {
             ServerSingletons.SERVER.kick("Failed to authenticate.", identity);
