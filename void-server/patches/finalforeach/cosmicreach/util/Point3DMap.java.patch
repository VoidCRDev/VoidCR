--- a/finalforeach/cosmicreach/util/Point3DMap.java
+++ b/finalforeach/cosmicreach/util/Point3DMap.java
@@ -5,6 +_,19 @@
 import java.util.function.Consumer;
 
 public class Point3DMap<T> implements IPoint3DMap<T> {
+   // VoidCR start - allow retrieval of all values
+   public java.util.Collection<T> values() {
+      final var collector = new java.util.ArrayList<T>();
+      final var iter = map.iterator();
+      while (iter.hasNext()) {
+         final var innerIter = iter.next().value.values();
+         while (innerIter.hasNext) {
+            collector.add(innerIter.next());
+         }
+      }
+      return collector;
+   }
+   // VoidCR end - allow retrieval of all values
    LongMap<IntMap<T>> map = new LongMap();
    int totalPoints = 0;
 
@@ -83,7 +_,7 @@
    public void forEach(Consumer<T> consumer) {
       this.map.forEach(lt -> {
          if (lt.value != null) {
-            ((IntMap)lt.value).forEach(t -> consumer.accept((T)t.value));
+            ((IntMap<T>)lt.value).forEach(t -> consumer.accept((T)t.value)); // VoidCR - decompile fix
          }
       });
    }
@@ -94,7 +_,7 @@
          long l = lt.key;
          int x = (int)(l >> 32);
          int y = (int)(l & 4294967295L);
-         ((IntMap)lt.value).forEach(it -> {
+         ((IntMap<T>)lt.value).forEach(it -> { // VoidCR - decompile fix
             int z = it.key;
             consumer.consume((T)it.value, x, y, z);
          });
